#!/bin/sh

# this will work pretty much as-is for a mikrotik router, you'll have to change the domain name
# of the router and the name of the certs, but it should just work. 

# $1 = domainname
# $2 = private key
# $3 = cert /scratch/services/dehydrated/certs/.../cert.pem
# $4 = fullchain /scratch/services/dehydrated/certs/.../fullchain.pem
# $5 = ca chain /scratch/services/dehydrated/certs/.../chain.pem
# $6 = timestamp 1505868437


# Step 0: copy the certs over
scp $2 admin@$1:/$1_key.pem
scp $4 admin@$1:/$1_crt.pem

# step 1: delete the old certs from the router
ssh admin@$1 /certificate remove [find common-name="$1"] 

# step 2: load the new certs into the router
ssh admin@$1 /certificate import file-name=$1_crt.pem passphrase='""'
ssh admin@$1 /certificate import file-name=$1_key.pem passphrase='""'

# step 3: set the https server to use the new certs
ssh admin@$1 /ip service set www-ssl certificate=$1_crt.pem_0


# let's test it.


